create table if not exists TB_ACOMPANHANTES(ID_ACOMPANHANTE INTEGER NOT NULL, DESCRICAO VARCHAR, PRIMARY KEY (ID_ACOMPANHANTE));
create table if not exists TB_ATRIBUTO(ID_LOJA INTEGER NOT NULL, ID_ATRIBUTO INTEGER NOT NULL, DESC_ATRIBUTO VARCHAR, PRIMARY KEY (ID_LOJA, ID_ATRIBUTO));
create table if not exists TB_ATRIBUTO_PRODUTO(ID_PRODUTO INTEGER NOT NULL, ID_LOJA INTEGER NOT NULL, ID_ATRIBUTO INTEGER NOT NULL, DESC_ATRIBUTO VARCHAR);
create table if not exists TB_CICLO(ID_CICLO INTEGER NOT NULL, DESCRICAO VARCHAR, DATA_INICIO DATE, DATA_FIM DATE, CICLO_ATUAL BIT, PRIMARY KEY (ID_CICLO));
create table if not exists TB_CLIENTES(ID_CLIENTE INTEGER NOT NULL, CNPJ VARCHAR, INSCRICAO_ESTADUAL VARCHAR, RAZAO_SOCIAL VARCHAR, NOME_FANTASIA VARCHAR, EMAIL VARCHAR, TELEFONE VARCHAR, ENDERECO VARCHAR, NUMERO VARCHAR, COMPLEMENTO VARCHAR, BAIRRO VARCHAR, CIDADE VARCHAR, UF VARCHAR, CEP VARCHAR, FORMALIZACAO VARCHAR, ID_TIPO_CLIENTE INTEGER, TIPO_CLIENTE VARCHAR, RESPONSAVEL VARCHAR, LOJAS VARCHAR, VENDA_DIRETA VARCHAR, DADOS_BANCARIOS VARCHAR, BANDEIRA VARCHAR, ASSOCIATIVISMO VARCHAR, COLIGACAO VARCHAR, ALTERADO BIT, PRIMARY KEY (ID_CLIENTE));
create table if not exists TB_DADOS_CLIENTE_CONVENIO(ID_CLIENTE INTEGER NOT NULL, DADOS_CLIENTE VARCHAR, ALTERADO BIT, PRIMARY KEY(ID_CLIENTE));
create table if not exists TB_DADOS_CLIENTE_DOCUMENTOS(ID_CLIENTE INTEGER NOT NULL, DADOS_CLIENTE VARCHAR, ALTERADO BIT, PRIMARY KEY(ID_CLIENTE));
create table if not exists TB_DADOS_CLIENTE_GERAL(ID_CLIENTE INTEGER NOT NULL, DADOS_CLIENTE VARCHAR, ALTERADO BIT, PRIMARY KEY(ID_CLIENTE));
create table if not exists TB_DADOS_CLIENTE_MOBILIARIO(ID_CLIENTE INTEGER NOT NULL, DADOS_CLIENTE VARCHAR, ALTERADO BIT, PRIMARY KEY(ID_CLIENTE));
create table if not exists TB_DADOS_CLIENTE_PESQUISA_MERCADO(ID_CLIENTE INTEGER NOT NULL, DADOS_CLIENTE VARCHAR, ALTERADO BIT, PRIMARY KEY(ID_CLIENTE));
create table if not exists TB_DADOS_CLIENTE_SERVICOS(ID_CLIENTE INTEGER NOT NULL, DADOS_CLIENTE VARCHAR, ALTERADO BIT, PRIMARY KEY(ID_CLIENTE));
create table if not exists TB_DASHBOARD_CLIENTE(ID_CLIENTE INTEGER NOT NULL, JSON_DASHBOARD_CLIENTE VARCHAR, PRIMARY KEY (ID_CLIENTE));
create table if not exists TB_DASHBOARD_HOME(ID_USUARIO INTEGER NOT NULL, JSON_DASHBOARD_HOME VARCHAR, PRIMARY KEY (ID_USUARIO));
create table if not exists TB_DASHBOARD_MDTR_CLIENTE(ID_CLIENTE INTEGER NOT NULL, JSON_DASHBOARD_MDTR_CLIENTE VARCHAR, PRIMARY KEY (ID_CLIENTE));
create table if not exists TB_DASHBOARD_MDTR_HOME(ID_USUARIO INTEGER NOT NULL, JSON_DASHBOARD_MDTR_HOME VARCHAR, PRIMARY KEY (ID_USUARIO));
create table if not exists TB_ESTOQUE(ID_LOJA INTEGER NOT NULL, ID_PRODUTO INTEGER NOT NULL, QUANTIDADE INTEGER, ID_DISTRIBUIDORA INTEGER, ID_OPERADOR_LOGISTICO INTEGER NOT NULL);
create table if not exists TB_FORMALIZACAO_CLIENTE_LOJA(ID_CLIENTE INTEGER NOT NULL, ID_LOJA INTEGER NOT NULL, FORMALIZACAO VARCHAR, PRIMARY KEY (ID_CLIENTE, ID_LOJA, FORMALIZACAO));
create table if not exists TB_FORMA_PAGAMENTO(ID_LOJA INTEGER NOT NULL, ID_FORMA_PAGAMENTO INTEGER NOT NULL, DESC_FORMA_PAGAMENTO VARCHAR, VALOR_MINIMO DOUBLE NOT NULL, PRIMARY KEY (ID_LOJA, ID_FORMA_PAGAMENTO));
create table if not exists TB_FORMA_PAGAMENTO_FORMALIZACAO(CNPJ VARCHAR NOT NULL, ID_FORMA_PAGAMENTO INTEGER NOT NULL, DESC_FORMA_PAGAMENTO VARCHAR, PRIMARY KEY (CNPJ, ID_FORMA_PAGAMENTO));
create table if not exists TB_FUNCIONARIOS(ID_FUNCIONARIO INTEGER NOT NULL, ID_CLIENTE INTEGER,ID_MOBILE VARCHAR, NOME VARCHAR, APELIDO VARCHAR, CARGO VARCHAR, ESPECIALIDADE VARCHAR,SEXO VARCHAR, DDD VARCHAR, TELEFONE VARCHAR, EMAIL VARCHAR, DATA_NASCIMENTO VARCHAR, FORMACAO VARCHAR, TIME_FUTEBOL VARCHAR, HOBBY VARCHAR, CONSOME_MEDICAMENTO BIT,NOME_MEDICAMENTO VARCHAR, INTERESSE_CURSOS BIT, EXCLUIDO BIT);
create table if not exists TB_IMAGENS(COD_BARRA VARCHAR NOT NULL, IMAGEM BLOB, PRIMARY KEY (COD_BARRA));
create table if not exists TB_KIT(ID_KIT INTEGER NOT NULL, NOME_KIT VARCHAR, VALOR_TOTAL DOUBLE, VALOR_TOTAL_COM_DESCONTO DOUBLE, IVA_TOTAL DOUBLE, ID_PRODUTO INTEGER NOT NULL, NOME_PRODUTO VARCHAR, FABRICANTE VARCHAR, DESCONTO DOUBLE, VALOR DOUBLE, VALOR_COM_DESCONTO DOUBLE, IVA DOUBLE, QUANTIDADE INTEGER, APONTADOR VARCHAR, NOME_IMAGEM VARCHAR, PRIMARY KEY(ID_KIT, ID_PRODUTO));
create table if not exists TB_KIT_OPERADOR_LOGISTICO(ID_KIT INTEGER NOT NULL, ID_OPERADOR_LOGISTICO INTEGER NOT NULL, NOME_OPERADOR_LOGISTICO VARCHAR, ID_GRUPO INTEGER NOT NULL, NOME_GRUPO VARCHAR NOT NULL, ID_TIPO_CADASTRO INTEGER NOT NULL, UF VARCHAR NOT NULL, PRIMARY KEY (ID_KIT, ID_OPERADOR_LOGISTICO, ID_TIPO_CADASTRO, UF));
create table if not exists TB_KIT_PRECO(ID_PRODUTO INTEGER NOT NULL, NOME_PRODUTO VARCHAR, APRESENTACAO VARCHAR, PF DOUBLE, PMC DOUBLE, UF VARCHAR NOT NULL, PRIMARY KEY(ID_PRODUTO, UF));
create table if not exists TB_KIT_CLIENTE(ID_KIT INTEGER NOT NULL, CNPJ VARCHAR NOT NULL, PRIMARY KEY(ID_KIT, CNPJ));
create table if not exists TB_LINHA_UNIDADE_NEGOCIO(NOME_UNIDADE VARCHAR, NOME_LINHA VARCHAR, ID_LINHA INTEGER, ID_UNIDADE_NEGOCIO INTEGER);
create table if not exists TB_LOJAS(ID_LOJA INTEGER NOT NULL, NOME_LOJA VARCHAR, VALOR_MINIMO DOUBLE, TIPO_LOJA INTEGER, TIPO_IMPOSTO_LOJA INTEGER, ORDEM INTEGER, IMAGEM BLOB, PRIMARY KEY(ID_LOJA));
create table if not exists TB_MODELO_PEDIDO(NOME_MODELO VARCHAR, ID_LOJA INTEGER NOT NULL, ID_PRODUTO INTEGER NOT NULL, QUANTIDADE_COMPRADA INTEGER, PRIMARY KEY (NOME_MODELO, ID_LOJA, ID_PRODUTO));
create table if not exists TB_MOTIVO_OPERADOR_LOGISTICO(ID_MOTIVO INTEGER NOT NULL, DESC_MOTIVO VARCHAR, PRIMARY KEY (ID_MOTIVO));
create table if not exists TB_OPERADOR_LOGISTICO(ID_LOJA INTEGER NOT NULL, ID_OPERADOR_LOGISTICO INTEGER NOT NULL, NOME_OPERADOR_LOGISTICO VARCHAR, ID_GRUPO INTEGER NOT NULL, NOME_GRUPO VARCHAR NOT NULL, ID_TIPO_CADASTRO INTEGER NOT NULL, UF VARCHAR NOT NULL);
create table if not exists TB_OPERADOR_LOGISTICO_CLIENTE(CNPJ VARCHAR NOT NULL, ID_LOJA INTEGER NOT NULL, OPERADORES_LOGISTICOS VARCHAR, PRIMARY KEY (CNPJ, ID_LOJA));
create table if not exists TB_PEDIDO_CABECALHO(ID_PEDIDO INTEGER NOT NULL, USUARIO VARCHAR NOT NULL, ID_CLIENTE INTEGER NOT NULL, CNPJ VARCHAR, RAZAO_SOCIAL VARCHAR, UF VARCHAR, ID_LOJA INTEGER NOT NULL, TOTAL_PEDIDO DOUBLE, ID_FORMA_PAGAMENTO INTERGER, OBSERVACAO VARCHAR, FECHADO INTEGER DEFAULT 0, ENVIADO INTEGER DEFAULT 0, PEDIDO_ONLINE INTEGER DEFAULT 0, DATA_PEDIDO DATE, TIPO_PEDIDO VARCHAR, ID_KIT INTEGER DEFAULT 0, QUANTIDADE_KIT INTEGER, DATA_AGENDAMENTO DATE, PRIMARY KEY (ID_PEDIDO));
create table if not exists TB_PEDIDO_ITENS(ID_PEDIDO INTEGER NOT NULL, ID_LOJA INTEGER, ID_PRODUTO INTEGER, NOME_PRODUTO VARCHAR, APRESENTACAO VARCHAR, COD_BARRA VARCHAR, DESCONTO DOUBLE, PF DOUBLE, VALOR DOUBLE, ST DOUBLE, QUANTIDADE INTEGER, APONTADOR VARCHAR NOT NULL, FORMALIZACAO VARCHAR NOT NULL, QUANTIDADE_PROGRESSIVA_SELECIONADA INTEGER NOT NULL, PRIMARY KEY (ID_PEDIDO, ID_LOJA, ID_PRODUTO, APONTADOR, FORMALIZACAO, QUANTIDADE_PROGRESSIVA_SELECIONADA));
create table if not exists TB_PEDIDO_MOTIVO_OPERADOR_LOGISTICO(ID_PEDIDO INTEGER NOT NULL, ID_MOTIVO INTEGER NOT NULL, DESC_MOTIVO VARCHAR, OBSERVACAO VARCHAR, PRIMARY KEY (ID_PEDIDO, ID_MOTIVO));
create table if not exists TB_PEDIDO_OPERADOR_LOGISTICO(ID_PEDIDO INTEGER NOT NULL, ID_OPERADOR_LOGISTICO INTEGER NOT NULL, ORDEM INTEGER NOT NULL, PRIMARY KEY (ID_PEDIDO, ID_OPERADOR_LOGISTICO, ORDEM));
create table if not exists TB_PESQUISA_CONCORRENCIA(ID_VISITA INTEGER NOT NULL, ID_CLIENTE INTEGER NOT NULL, DADOS_CLIENTE VARCHAR, ALTERADO BIT, PRIMARY KEY(ID_VISITA, ID_CLIENTE));
create table if not exists TB_POS_VISITA(ID_VISITA INTEGER NOT NULL, ID_CLIENTE INTEGER NOT NULL, DADOS_CLIENTE VARCHAR, ALTERADO BIT, PRIMARY KEY(ID_VISITA, ID_CLIENTE));
create table if not exists TB_PRECOS(ID_PRODUTO INTEGER NOT NULL, ID_LOJA INTEGER NOT NULL, PMC DOUBLE, PF DOUBLE, UF VARCHAR NOT NULL);
create table if not exists TB_PRODUTOS(ID_PRODUTO INTEGER NOT NULL, NOME_PRODUTO VARCHAR, PRINCIPIO_ATIVO VARCHAR, APRESENTACAO VARCHAR, COD_BARRA VARCHAR NOT NULL, LISTA_ICMS_ST VARCHAR, ID_FABRICANTE INTEGER, FABRICANTE VARCHAR, ID_UNIDADE_NEGOCIO INTEGER, PRIMARY KEY (ID_PRODUTO));
create table if not exists TB_PROGRESSIVA(ID_LOJA INTEGER NOT NULL, ID_PRODUTO INTEGER NOT NULL, VALOR DOUBLE, ST DOUBLE, PF DOUBLE, PMC DOUBLE, DESCONTO DOUBLE, QUANTIDADE INTEGER NOT NULL, FORMALIZACAO VARCHAR, APONTADOR VARCHAR, UF VARCHAR NOT NULL, DATA_VENCIMENTO VARCHAR, PRIMARY KEY (ID_LOJA, ID_PRODUTO, QUANTIDADE, FORMALIZACAO, UF));
create table if not exists TB_ROTEIRO(ID_CLIENTE INTEGER NOT NULL, CONTATOS VARCHAR, VISITAS VARCHAR, VENDA BIT, COTA BIT, DESCONTO BIT, PRIMARY KEY(ID_CLIENTE));
create table if not exists TB_RUPTURA(ID_VISITA INTEGER NOT NULL, ID_CLIENTE INTEGER NOT NULL, ID_PRODUTO INTEGER NOT NULL, VENDEU_TODO_ESTOQUE BIT, SEM_ESTOQUE BIT, SOB_ENCOMENDA BIT, NAO_CADASTRADO BIT, INATIVO BIT, SEM_RUPTURA BIT, OBSERVACAO VARCHAR, ALTERADO BIT, PRIMARY KEY(ID_VISITA, ID_CLIENTE, ID_PRODUTO));
create table if not exists TB_RUPTURA_USUARIO(ID_PRODUTO INTEGER NOT NULL, PRIMARY KEY(ID_PRODUTO));
create table if not exists TB_TIPO_CLIENTE(ID_TIPO_CLIENTE INTEGER NOT NULL, DESCRICAO VARCHAR, PRIMARY KEY(ID_TIPO_CLIENTE));
create table if not exists TB_UNIDADE_NEGOCIO(ID_UNIDADE_NEGOCIO INTEGER NOT NULL, DESCRICAO VARCHAR, PRIMARY KEY(ID_UNIDADE_NEGOCIO));
create table if not exists TB_VISITA(ID_VISITA INTEGER NOT NULL, ID_CLIENTE INTEGER, DATA_VISITACAO DATE, ORDEM INTEGER, ID_SEMANA_CICLO INTEGER, RANGE VARCHAR, COD_STATUS INTEGER DEFAULT 0, REAGENDADO BIT, VISITADO BIT, NAO_VISITA BIT, EXCLUIDO BIT, COMENTARIOS VARCHAR, OBJETIVO_PROXIMA_VISITA VARCHAR, ID_MOBILE VARCHAR, ALTERADO BIT, PRIMARY KEY (ID_VISITA));
create table if not exists TB_VISITA_ACOMPANHANTE(ID_VISITA INTEGER NOT NULL, ID_ACOMPANHANTE INTEGER NOT NULL, PRIMARY KEY (ID_VISITA, ID_ACOMPANHANTE));
create table if not exists TB_Pedido(PedidoId INTEGER PRIMARY KEY ASC, IdMobile VARCHAR, CodigoUsuario INTEGER, CodigoCliente INTEGER, PedidoOnline INTEGER DEFAULT 0, Json VARCHAR, Status INTEGER DEFAULT 0, Data TIMESTAMP DEFAULT CURRENT_TIMESTAMP);
create table if not exists TB_DASHBOARD_DESCONTO(ID_USUARIO INTEGER, ID_UNIDADE INTEGER, UNIDADE VARCHAR, MES VARCHAR, ANO VARCHAR, VALOR_LIQUIDO DOUBLE, VALOR_BRUTO DOUBLE, CNPJ VARCHAR, NOME_PRODUTO VARCHAR);
create table if not exists TB_DASHBOARD_DESCONTO_OBJETIVO(ID_USUARIO INTEGER, ID_UNIDADE INTEGER, UNIDADE VARCHAR, MES VARCHAR, ANO VARCHAR, DESCONTO DOUBLE, CNPJ VARCHAR, NOME_PRODUTO VARCHAR);
create table if not exists TB_DASHBOARD_DICAS(ID_USUARIO INTEGER, ID_CLIENTE INTEGER, CNPJ VARCHAR, DESCRICAO VARCHAR);
create table if not exists TB_DASHBOARD_HORIZONTALIZACAO(ID_USUARIO INTEGER, ID_UNIDADE INTEGER, UNIDADE VARCHAR, MES VARCHAR, ANO VARCHAR, MOLECULAS INTEGER, CNPJ VARCHAR);
create table if not exists TB_DASHBOARD_HORIZONTALIZACAO_OBJETIVO(ID_USUARIO INTEGER, ID_UNIDADE INTEGER, UNIDADE VARCHAR, MES VARCHAR, ANO VARCHAR, QUANTIDADE INTEGER, CNPJ VARCHAR);
create table if not exists TB_DASHBOARD_HORIZONTALIZACAO_OBJETIVO_USUARIO(ID_USUARIO INTEGER, ID_UNIDADE INTEGER, UNIDADE VARCHAR, MES VARCHAR, ANO VARCHAR, QUANTIDADE INTEGER);
create table if not exists TB_DASHBOARD_HORIZONTALIZACAO_USUARIO(ID_USUARIO INTEGER, ID_UNIDADE INTEGER, UNIDADE VARCHAR, MES VARCHAR, ANO VARCHAR, MOLECULAS INTEGER);
create table if not exists TB_DASHBOARD_LEMBRETES(ID_USUARIO INTEGER, DESCRICAO VARCHAR, LINK VARCHAR, ID_CLIENTE INTEGER, CNPJ VARCHAR);
create table if not exists TB_DASHBOARD_LEMBRETES_USUARIO(ID_USUARIO INTEGER, DESCRICAO VARCHAR, LINK VARCHAR);
create table if not exists TB_DASHBOARD_MDTR_MEDIA(ID_USUARIO INTEGER, ID_UNIDADE INTEGER, TOTAL DOUBLE, QUANTIDADE INTEGER, CNPJ VARCHAR);
create table if not exists TB_DASHBOARD_MDTR_MEDIA_USUARIO(ID_USUARIO INTEGER, ID_UNIDADE INTEGER, TOTAL DOUBLE, QUANTIDADE INTEGER);
create table if not exists TB_DASHBOARD_MDTR_MES(ID_USUARIO INTEGER, ID_UNIDADE INTEGER, TOTAL DOUBLE, QUANTIDADE INTEGER, CNPJ VARCHAR);
create table if not exists TB_DASHBOARD_MDTR_MES_USUARIO(ID_USUARIO INTEGER, ID_UNIDADE INTEGER, TOTAL DOUBLE, QUANTIDADE INTEGER);
create table if not exists TB_DASHBOARD_MDTR_OBJETIVO(ID_USUARIO INTEGER, ID_UNIDADE INTEGER, TOTAL DOUBLE, QUANTIDADE INTEGER, CNPJ VARCHAR);
create table if not exists TB_DASHBOARD_MDTR_OBJETIVO_USUARIO(ID_USUARIO INTEGER, ID_UNIDADE INTEGER, TOTAL DOUBLE, QUANTIDADE INTEGER);
create table if not exists TB_DASHBOARD_POSITIVACAO(ID_USUARIO INTEGER, ID_UNIDADE INTEGER, UNIDADE VARCHAR, MES VARCHAR, ANO VARCHAR, CLIENTES INTEGER, CNPJ VARCHAR, NOME_PRODUTO VARCHAR);
create table if not exists TB_DASHBOARD_POSITIVACAO_OBJETIVO(ID_USUARIO INTEGER, ID_UNIDADE INTEGER, UNIDADE VARCHAR, MES VARCHAR, ANO VARCHAR, QUANTIDADE INTEGER);
create table if not exists TB_DASHBOARD_VENDAS(ID_USUARIO INTEGER, ID_UNIDADE INTEGER, UNIDADE VARCHAR, MES VARCHAR, ANO VARCHAR, TOTAL DOUBLE, QUANTIDADE INTEGER, CNPJ VARCHAR, NOME_PRODUTO VARCHAR);
create table if not exists TB_DASHBOARD_VENDAS_OBJETIVO(ID_USUARIO INTEGER, ID_UNIDADE INTEGER, UNIDADE VARCHAR, MES VARCHAR, ANO VARCHAR, TOTAL DOUBLE, QUANTIDADE INTEGER, CNPJ VARCHAR, NOME_PRODUTO VARCHAR);
create table if not exists TB_DASHBOARD_VISITACAO(ID_USUARIO INTEGER, MES VARCHAR, ANO VARCHAR, CONTATOS INTEGER, CLIENTES INTEGER);
create table if not exists TB_DASHBOARD_VISITACAO_OBJETIVO(ID_USUARIO INTEGER, MES VARCHAR, ANO VARCHAR, CONTATOS INTEGER, CLIENTES INTEGER);
create table if not exists TB_DASHBOARD_CLASSIFICACAO(ID_USUARIO INTEGER, CNPJ VARCHAR, CAT_IMS VARCHAR, CPV INTEGER, SEGMENTACAO VARCHAR);
create table if not exists TB_DASHBOARD_INVESTIMENTO(ID_USUARIO INTEGER, CNPJ_MATRIZ VARCHAR, COD_STATUS INTEGER, QUANTIDADE INTEGER, DESCRICAO VARCHAR);

CREATE INDEX COD_LOJA_ATRI ON TB_ATRIBUTO (ID_LOJA);
CREATE INDEX COD_ATRI ON TB_ATRIBUTO (ID_ATRIBUTO);
CREATE INDEX COD_LOJA_AT ON TB_ATRIBUTO_PRODUTO (ID_LOJA);
CREATE INDEX COD_ATRI_PROD ON TB_ATRIBUTO_PRODUTO (ID_ATRIBUTO);
CREATE INDEX COD_PROD_AT ON TB_ATRIBUTO_PRODUTO (ID_PRODUTO);
CREATE INDEX COD_PROD ON TB_PRODUTOS (ID_PRODUTO);
CREATE INDEX NOME_PROD ON TB_PRODUTOS (NOME_PRODUTO);
CREATE INDEX COD_PROG ON TB_PROGRESSIVA (ID_PRODUTO);
CREATE INDEX LOJA_PROG ON TB_PROGRESSIVA (ID_LOJA);
CREATE INDEX COD_CLIENTE ON TB_CLIENTES (ID_CLIENTE);
CREATE INDEX NOME_CLIENTE ON TB_CLIENTES (RAZAO_SOCIAL);
CREATE INDEX CNPJ_CLIENTE ON TB_CLIENTES (CNPJ);
CREATE INDEX COD_PRECO ON TB_PRECOS (ID_PRODUTO);
CREATE INDEX LOJA_PRECO ON TB_PRECOS (ID_LOJA);
CREATE INDEX COD_ESTOQUE ON TB_ESTOQUE (ID_PRODUTO);
CREATE INDEX LOJA_ESTOQUE ON TB_ESTOQUE (ID_LOJA);
CREATE INDEX OL_ESTOQUE ON TB_ESTOQUE (ID_OPERADOR_LOGISTICO);
CREATE INDEX DISTRI_ESTOQUE ON TB_ESTOQUE (ID_DISTRIBUIDORA);
CREATE INDEX COD_LOJA ON TB_LOJAS (ID_LOJA);
CREATE INDEX COD_KIT ON TB_KIT (ID_KIT);
CREATE INDEX PROD_KIT ON TB_KIT (ID_PRODUTO);
CREATE INDEX BARRA_IMG ON TB_IMAGENS (COD_BARRA);
CREATE INDEX RUP_VISITA ON TB_RUPTURA (ID_VISITA);
CREATE INDEX RUP_CLIENTE ON TB_RUPTURA (ID_CLIENTE);
CREATE INDEX RUP_PRODUTO ON TB_RUPTURA (ID_PRODUTO);
CREATE INDEX RUP_USUARIO_PRODUTO ON TB_RUPTURA_USUARIO (ID_PRODUTO);





